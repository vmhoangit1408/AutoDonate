
function InitializeFirebase() {
    // Your web app's Firebase configuration
    var firebaseConfig = {
        apiKey: "AIzaSyCagRQ-QZHZGxwR3oo-BOKXjCZm10ww-Rk",
        authDomain: "cos-main.firebaseapp.com",
        databaseURL: "https://cos-main.firebaseio.com",
        projectId: "cos-main",
        storageBucket: "",
        messagingSenderId: "522305822487",
        appId: "1:522305822487:web:6b82e333eb310290776152"
    };
    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);
}
var keyCap="0bb3580ec71ce9d43587c94a6e8b5b30";
var database;
(function() {
    if (window.location.href=="https://cos.tv/subject/home/dist/daily.html#/") {
        start_solve();
        setTimeout(function() {
            var frames = document.getElementsByTagName("iframe");
            var reload=true;
            for(let i = 0; i < frames.length; i++){
                var src = frames[i].getAttribute('src');
                if(src != null && src.startsWith("https://www.google.com/recaptcha/api2/bframe") && frames[i].parentNode.parentNode.style.visibility != "hidden"){
                    reload=false;
                    break;
                }
            }
            if(reload){
                if(document.getElementsByClassName("clickSignInRed")[0]!=null){
                    window.location.reload();
                }
                else{
                    window.location.href="https://cos.tv/home/dist/treasure.html#/";
                }
            }
        }, 15000);

        setInterval(function() {
            try{
                document.getElementsByClassName("clickSignInRed")[0].click();
            } catch(e){}
            try{
                document.getElementsByClassName("btn btn-confirm")[0].click();
            } catch(e){}
            try{
                document.getElementsByClassName("btn-more-cos")[0].click();
            } catch(e){}
        }, 3000);
    }

    else if (window.location.href=="https://cos.tv/home/dist/treasure.html#/") {
        start_solve();
        setTimeout(function() {
            var frames = document.getElementsByTagName("iframe");
            var reload=true;
            for(let i = 0; i < frames.length; i++){
                var src = frames[i].getAttribute('src');
                if(src != null && src.startsWith("https://www.google.com/recaptcha/api2/bframe") && frames[i].parentNode.parentNode.style.visibility != "hidden"){
                    reload=false;
                    break;
                }
            }
            if(reload){
                window.location.reload();
            }

        }, 15000);

        setInterval(function() {
            try{
                console.log(document.getElementsByClassName("inadequate fix-font-style")[0].innerText);
                if(document.getElementsByClassName("inadequate fix-font-style")[0].innerText=="Mở rương báu (miễn phí)" || document.getElementsByClassName("inadequate fix-font-style")[0].innerText=="Open a treasure box(for free)"){
                    document.getElementsByClassName("inadequate fix-font-style")[0].click();
                }
                else{
                    setTimeout(function() {
                        var idVideo="1571382354161912582,1571382292835482762,1571380203644555036,1571376336024863742,1571464868903751450,1571373765751487668,1571458083936973131,1571404667445222763,1571386956299648191".split(",");
                        var curId=Math.floor(Math.random() * idVideo.length);
                        window.location.href="https://cos.tv/videos/play/"+idVideo[curId];
                    }, 5000);
                }
            } catch(e){}
        }, 5000);

    }

    else if (window.location.href=="https://cos.tv/popcorn/") {
        setTimeout(function() {
            var checkLogin=window.document.getElementsByClassName("header-link avatar-link")[0].title.replace(/\s/g,'');
            if(checkLogin != null){
                var timeCheck=setInterval(function() {
                    var today = new Date();
                    var timeCur=today.getMinutes();
                    console.log(timeCur);
                    if(parseInt(timeCur)>=0 && parseInt(timeCur)<=5){
                        var cosLast = parseFloat(window.document.querySelector("a.property-val.cos-property").innerHTML);
                        clearInterval(timeCheck);
                        var timeRoll=setInterval(function() {
                            if(parseInt(timeCur)<=5){
                                if(parseInt(window.document.getElementsByClassName("property-val pop-property")[0].innerHTML) >=100){
                                    try{
                                        document.getElementsByClassName("btn")[0].click();
                                    } catch(e){
                                        try{
                                            document.getElementsByClassName("btn-start")[0].click();
                                        } catch(e){}
                                    }
                                }
                                else{
                                    clearInterval(timeRoll);
                                    InitializeFirebase();
                                    database = firebase.database();
                                    var key=checkLogin.split("@")[0];
                                    var cos = parseFloat(window.document.querySelector("a.property-val.cos-property").innerHTML);
                                    var today = new Date();
                                    var dd = String(today.getDate()).padStart(2, '0');
                                    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
                                    var yyyy = today.getFullYear();

                                    today = dd + '-' + mm + '-' + yyyy;

                                    database.ref('/'+today+'/'+key).set({
                                        name: checkLogin,
                                        cos: cos,
                                        cosLast: cosLast
                                    });
                                    setTimeout(function() {
                                        window.location.href="about:blank";
                                    }, 5000);
                                }
                            }
                        }, 3000);
                    }
                }, 3000);
            }
            else{
                window.location.href="https://cos.tv/popcorn/";
            }

        }, 5000);
    }
    else if (window.location.href=="https://cos.tv/property/") {

        setTimeout(function() {
            InitializeFirebase();
            database = firebase.database();
            var checkLogin=window.document.getElementsByClassName("header-link avatar-link")[0].title.replace(/\s/g,'');
            var key=checkLogin.split("@")[0];
            var cos = parseFloat(window.document.querySelector("div.tab-coin div.page-tab.cos p.tab-info span").innerHTML);
            var today = new Date();
            var dd = String(today.getDate()).padStart(2, '0');
            var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
            var yyyy = today.getFullYear();

            today = dd + '-' + mm + '-' + yyyy;

            database.ref('/'+today+'/'+key).set({
                name: checkLogin,
                cos: cos
            });
            setTimeout(function() {
                window.location.href="about:blank";
            }, 5000);
        }, 5000);
    }
    else if (window.location.href.includes("https://cos.tv/subject/main/build/login.html")) {
        start_solve();
    }
    else if (window.location.href.includes("https://cos.tv/videos/play/")) {
        //         var idVideo="1570084374028463070,1570084463139666709,1570084502205306269,1570084522291635966,1570084535991461590,1570085487120454601,1570085507144163522,1570085528220307276,1570085556531981464,1570086376967818541,1570087863013776996,1570087710349328130,1570087715711660261,1570087130910778831,1570087127412389373,1570088367624569476,1570088369077356729,1570088807046244737,1570088827879097256,1570088835745599654".split(",");
        //         var curId=Math.floor(Math.random() * idVideo.length);
        //         setTimeout(function() {
        //             document.getElementById("demoCanvas").click();
        //             setTimeout(function() {
        //                 window.location.href="https://cos.tv/videos/play/"+idVideo[curId];
        //             }, 30000);
        //         }, 30000);
        setTimeout(function() {
            try{
                document.getElementsByClassName("btn claim-btn")[0].click();
            } catch(e){}
            setTimeout(function() {
                window.location.href="https://cos.tv/wallet/bp_vote";
            }, 3000);
        }, 5000);
    }
    else if (window.location.href.includes("https://cos.tv/wallet/bp_vote")) {
        setTimeout(function() {
            var curId=Math.floor(Math.random() * 7);
            if(curId==0){
                curId=7;
            }
            else if(curId==2){
                curId=8;
            }
            else if(curId==3){
                curId=9;
            }
            else if(curId==5){
                curId=11;
            }
            try{
                document.getElementsByClassName("cos-btn-primary btn-vote")[curId].click();
            } catch(e){}
            setTimeout(function() {
                window.location.href="about:blank";
            }, 5000);
        }, 5000);
    }
})();

//Start solve cap ------------------------------------------------------------------------------------------------------------------------------------------
var id = "";
let message = document.createElement('span');
var afterElement = null;
let pageurl = window.location.href;

function start_solve(){
    setInterval(function(){
        window.alert=function(){};
    },10000);
    //delete_div();
    let checkId = setInterval(function() {
        var frames = document.getElementsByTagName("iframe");
        for(let i = 0; i < frames.length; i++){
            var src = frames[i].getAttribute('src');
            if(src != null && src.startsWith("https://www.google.com/recaptcha/api2/bframe") && frames[i].parentNode.parentNode.style.visibility != "hidden"){
                //frames[i].parentNode.remove();
                for(let i = 0; i < frames.length; i++){
                    if(frames[i].offsetParent!=null)
                    {
                        let src = frames[i].getAttribute('src');
                        if(src != null && src.startsWith("https://www.google.com/recaptcha") ){
                            id = getParameterByName("k", src);
                            if(id != "" && id != null ){
                                afterElement = frames[i];
                                break;
                            }
                        }
                    }
                }
                if(id != "" && id != null ){

                    clearInterval(checkId);
                    setupMessageBox();
                    makeRequest_captchaguru();
                }
                break;
            }
        }
    }, 1000);
}

function delete_div(){
    var frames = document.getElementsByTagName("iframe");
    for(let i = 0; i < frames.length; i++){
        var src = frames[i].getAttribute('src');
        if(src != null && src.startsWith("https://www.google.com/recaptcha/api2/bframe")){
            frames[i].parentNode.remove();
            break;
        }
    }
}
function getParameterByName(name, url) {
    if (!url) url = window.location.href;
    name = name.replace(/[\[\]]/g, "\\$&");
    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
        results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, " "));
}
function setupMessageBox() {
    //let image = '<img src="' + chrome.extension.getURL('./icons/icon.png') + '" align="left" style="margin-right: 4px;" />';
    message.innerHTML = "<b>Solving captcha...</b>";
    let container = document.createElement('div');
    container.className = 'ReCaptcha_solver';
    //container.innerHTML = image;
    container.appendChild(message);
    container.style.backgroundColor = "#F9F9F9";
    container.style.border = "1px solid #D3D3D3";
    container.style.borderTop = "none";
    container.style.borderRadius = "0 0 3px 3px";
    container.style.padding = "5px";
    container.style.boxSizing = "border-box"
    container.style.width = "302px";
    container.style.margin = "-4px 2px 0 0";

    insertAfter(container, afterElement);
    // afterElement.appendChild(message);
}
function insertAfter(el, referenceNode) {
    referenceNode.parentNode.insertBefore(el, referenceNode);
}
function makeRequest_captchaguru(){
    sendMessage("<b>Xử Lý Bởi Captcha.Guru ...</b>");
    let key = keyCap;
    let url = 'https://api.captcha.guru/in.php?key='+key+'&googlekey='+id+'&method=userrecaptcha&pageurl='+pageurl+'&vendor_id=3';
    let request = new XMLHttpRequest();
    request.open("GET",url, true);
    request.send(null);
    request.onreadystatechange = function() {
        if (request.readyState == 4){
            if(request.responseText.includes('OK|')==false){
                sendMessage("<b>"+request.responseText+"</b>")
                setTimeout(start_solve, 2000);
                //loi cap -- xu ly -------------------------------
            }else{
                //////console.log(responseText.substring(3));
                startWatching_captchaguru(request.responseText.substring(3), key);
            }
        }
    }



}
function sendMessage(str){
    message.innerHTML = str;
}
function startWatching_captchaguru(code, key) {
    let initial = 7000, repeat = 5000;
    setTimeout(function() {
        console.log(code);
        checkCompletion_captchaguru(code, key, repeat);
    }, initial);
}
function checkCompletion_captchaguru(code, key, repeat) {
    let url = 'https://api.captcha.guru/res.php?key='+key+'&action=get&id='+code+'&json=0';
    let request = new XMLHttpRequest();
    request.open("GET",url, true);
    request.send(null);
    request.onreadystatechange = function() {
        if (request.readyState == 4){
            console.log(request.responseText);
            if(request.responseText.includes("CAPCHA_NOT_READY")){
                setTimeout(function() {
                    checkCompletion_captchaguru(code, key, repeat);
                }, repeat)
            }else{
                setCaptchaCode(request.responseText.substring(3));
            }

        }
    }

}
function setCaptchaCode(code) {
    let ele = document.getElementsByClassName("g-recaptcha-response")[0];
    console.log(ele);
    console.log(code);
    sendMessage("<b>XONG</b>");
    //setChecked();

    if(ele != null){
        ele.innerHTML = code;
        bitir(code);
        setTimeout(start_solve, 10000);

    }
}
function bitir(code)
{
    var taskSolution=code;
    var injectedCode = "(" + function(taskSolution) {
        var recaptchaCallbackAlreadyFired = false;

        var recursiveCallbackSearch = function(object, solution, currentDepth, maxDepth) {
            if (recaptchaCallbackAlreadyFired) {
                return
            }
            var passedProperties = 0;
            for (var i in object) {
                passedProperties++;
                if (passedProperties > 15) {
                    break
                }
                try {
                    if (typeof object[i] == "object" && currentDepth <= maxDepth) {
                        recursiveCallbackSearch(object[i], solution, currentDepth + 1, maxDepth)
                    } else if (i == "callback") {
                        if (typeof object[i] == "function") {
                            recaptchaCallbackAlreadyFired = true;
                            object[i](solution)
                        } else if (typeof object[i] == "string" && typeof window[object[i]] == "function") {
                            recaptchaCallbackAlreadyFired = true;
                            window[object[i]](solution)
                        }
                        return
                    }
                } catch (e) {}
            }
        };

        if (!recaptchaCallbackAlreadyFired) {
            if (typeof ___grecaptcha_cfg != "undefined" && typeof ___grecaptcha_cfg.clients != "undefined") {
                var oneVisibleRecaptchaClientKey = null;
                visible_recaptcha_element_search_loop: for (var i in ___grecaptcha_cfg.clients) {
                    for (var j in ___grecaptcha_cfg.clients[i]) {
                        if (___grecaptcha_cfg.clients[i][j] && typeof ___grecaptcha_cfg.clients[i][j].nodeName == "string" && typeof ___grecaptcha_cfg.clients[i][j].innerHTML == "string" && typeof ___grecaptcha_cfg.clients[i][j].innerHTML.indexOf("iframe") != -1) {
                            if (___grecaptcha_cfg.clients[i][j].offsetHeight != 0 || ___grecaptcha_cfg.clients[i][j].childNodes.length && ___grecaptcha_cfg.clients[i][j].childNodes[0].offsetHeight != 0 || ___grecaptcha_cfg.clients[i][j].dataset.size == "invisible") {
                                if (oneVisibleRecaptchaClientKey === null) {
                                    oneVisibleRecaptchaClientKey = i;
                                    break
                                } else {
                                    oneVisibleRecaptchaClientKey = null;
                                    break visible_recaptcha_element_search_loop
                                }
                            }
                        }
                    }
                }
                if (oneVisibleRecaptchaClientKey !== null) {
                    recursiveCallbackSearch(___grecaptcha_cfg.clients[oneVisibleRecaptchaClientKey], taskSolution, 1, 2)
                }
            }
        }
    } + ')("' + taskSolution + '");';
    var script = document.createElement("script");
    script.textContent = injectedCode;
    //console.log(injectedCode);
    (document.head || document.documentElement).appendChild(script);
    script.remove();
}
//End solve cap ------------------------------------------------------------------------------------------------------------------------------------------
